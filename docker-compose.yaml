version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # Изменено для локального доступа
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # Ускоряет запуск для локальной разработки
      # Создание топиков при запуске (удобно для примера)
      KAFKA_CREATE_TOPICS: "input-events:1:1,output-decisions:1:1"

  # --- Новый сервис PostgreSQL ---
  postgres:
    image: postgres:15 # Выберите актуальную версию
    container_name: dms-test3-postgres
    environment:
      POSTGRES_DB: dms_db         # Имя базы данных
      POSTGRES_USER: dms_user     # Имя пользователя
      POSTGRES_PASSWORD: dms_password # Пароль
    ports:
      - "5432:5432" # Проброс порта на хост
    volumes:
      - postgres_data:/var/lib/postgresql/data # Сохранение данных между перезапусками

volumes:
  postgres_data: # Именованный volume для данных Postgres